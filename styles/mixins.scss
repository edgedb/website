@import "settings.vars.scss";
@import "_urlEncode.scss";

@mixin mainfont {
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, arial,
    sans-serif;
}

@mixin edgedbfont {
  font-family: "EdgeDB", "Arial Narrow", "Arial", sans-serif;
  text-transform: uppercase;
}

@mixin monospace {
  font-family: "Roboto Mono", Monaco, monospace;
}

@mixin monoSubheader {
  font-family: "Sometype Mono", monospace;
  font-weight: 700;
  font-size: 16px;
  line-height: 16px;
  text-align: center;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  color: #8f8f8f;
}

@mixin breakpoint($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);
    // Subtracts 0.5px to make breakpoint exclusive (width < x) instead of
    // inclusive (width <= x)
    // (Uses -0.5px instead of -1px due to incorrect behaviour on some
    // systems ie. win10 with fractional display scaling ¯\_(ツ)_/¯)
    @media (max-width: #{$breakpoint-value - 0.5px}) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

@mixin responsive($breakpoint, $prop, $value) {
  @include breakpoint($breakpoint) {
    #{$prop}: $value;
  }
}
//                                 1440 1024 768  320
@mixin responsiveAll($prop, $base, $xl, $lg, $md, $sm) {
  #{$prop}: $base;
  @include breakpoint(xl) {
    #{$prop}: $xl;
  }
  @include breakpoint(lg) {
    #{$prop}: $lg;
  }
  @include breakpoint(md) {
    #{$prop}: $md;
  }
  @include breakpoint(sm) {
    #{$prop}: $sm;
  }
}

@mixin responsiveAllXXL($prop, $base, $xxl, $xl, $lg, $md, $sm) {
  #{$prop}: $base;
  @include breakpoint(xxl) {
    #{$prop}: $xxl;
  }
  @include breakpoint(xl) {
    #{$prop}: $xl;
  }
  @include breakpoint(lg) {
    #{$prop}: $lg;
  }
  @include breakpoint(md) {
    #{$prop}: $md;
  }
  @include breakpoint(sm) {
    #{$prop}: $sm;
  }
}

@mixin publishedDate {
  color: $edb_light_grey;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  line-height: 100%;
}

@mixin darkMode {
  [data-theme="dark"] & {
    @content;
  }
  @media (prefers-color-scheme: dark) {
    [data-theme="system"] & {
      @content;
    }
  }
}

@mixin hover {
  :global(.no-touch) &:hover {
    @content;
  }
}

@mixin hideScrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

$validSizes: 320, 420, 768, 1024, 1440, 1920, 2560;

@function mapBgImage($imgs, $suffix) {
  $bgList: ();
  @each $url, $size in $imgs {
    $bgList: append(
      $bgList,
      url("#{$url}#{if($size,'-'+$size,'')}#{$suffix}.webp"),
      $separator: comma
    );
  }
  @return $bgList;
}

@mixin sizedBgImage($img, $retina: true) {
  background-image: mapBgImage([$img], "");

  @if $retina {
    @media (min-resolution: 2dppx) {
      background-image: mapBgImage([$img], "-2x");
    }
  }
}

@mixin sizedBgImages($retina, $imgs...) {
  background-image: mapBgImage($imgs, "");

  @if $retina {
    @media (min-resolution: 2dppx) {
      background-image: mapBgImage($imgs, "-2x");
    }
  }
}

@mixin optimisedBackgroundImages($bgUrl) {
  @include sizedBgImage($bgUrl 2560, false);

  @include breakpoint(xl) {
    @include sizedBgImage($bgUrl 1920, false);
  }
  @include breakpoint(lg) {
    @include sizedBgImage($bgUrl 1440, false);
  }
  @include breakpoint(md) {
    @include sizedBgImage($bgUrl 1024, false);
  }
  @include breakpoint(sm) {
    @include sizedBgImage($bgUrl 768, false);
  }
  @include breakpoint(xs) {
    @include sizedBgImage($bgUrl 320, false);
  }
}

@mixin raisedShadow(
  $bgColour,
  $radius,
  $hover: true,
  $blur: 30px,
  $blurBottom: 8px,
  $blurHPad: 48px,
  $blurColour: rgba(0, 0, 0, 0.15)
) {
  position: relative;
  z-index: 0;

  &:before {
    position: absolute;
    content: "";
    top: 80%;
    left: $blurHPad;
    right: $blurHPad;
    bottom: 0;
    border-radius: $radius;
    box-shadow: 0 $blurBottom $blur $blurColour;
    z-index: -1;
  }

  &:after {
    position: absolute;
    content: "";
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: $bgColour;
    border-radius: $radius;
    z-index: -1;
  }

  @if $hover {
    transition: transform 0.05s;

    &:before {
      transition: box-shadow 0.05s;
    }

    @media (min-resolution: 2dppx) {
      @include hover {
        transform: scale(0.99);

        &:before {
          box-shadow: 0 #{$blurBottom * (3 / 4)} #{$blur * (2 / 3)} $blurColour;
          left: #{$blurHPad / 2};
          right: #{$blurHPad / 2};
        }
      }
    }

    &:active {
      transform: scale(0.98) !important;

      &:before {
        box-shadow: 0
          #{$blurBottom *
          (3 / 8)}
          #{$blur /
          3}
          $blurColour !important;
        left: #{$blurHPad / 4} !important;
        right: #{$blurHPad / 4} !important;
      }
    }
  }
}

// @mixin button_font_style {
//   text-transform: uppercase;
//   letter-spacing: 0.8px;
//   font-weight: $fw_semibold;
//   font-size: 14px;
//   user-select: none;
// }

// @mixin button($bg, $fg: #fff) {
//   @include button_font_style;

//   color: $fg;
//   text-align: center;
//   background: $bg;
//   border-radius: 5px;
//   padding: 9px 22px;
//   box-shadow: 0px 3px 5px rgba(darken($bg, 20%), 0.15);
//   transition: background 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
//   display: inline-block;

//   :global(.no-touch) &:hover {
//     color: $fg;
//     background: darken($bg, 4%);
//     box-shadow: 0px 3px 5px rgba(darken($bg, 20%), 0.25);
//   }
// }

// @mixin background-image($fn) {
//   width: image-width($fn);
//   height: image-height($fn);
//   background-image: url($fn);
//   background-repeat: no-repeat;
// }

// @function iphonex_right_constraint($min) {
//   @return unquote("max(") $min unquote(",env(safe-area-inset-right))");
// }

// @function iphonex_left_constraint($min) {
//   @return unquote("max(") $min unquote(",env(safe-area-inset-left))");
// }

// @mixin iphonex_sides_constraint($type, $min) {
//   /* See https://webkit.org/blog/7929/designing-websites-for-iphone-x/
//      for details. */
//   #{$type}-left: iphonex_left_constraint($min);
//   #{$type}-right: iphonex_right_constraint($min);
// }

// @mixin iphonex_var_constraint($var, $min) {
//   /* See https://webkit.org/blog/7929/designing-websites-for-iphone-x/
//      for details. */
//   #{$var}: unquote("max(") iphonex_left_constraint($min) unquote(",")
//     iphonex_right_constraint($min) unquote(")");
// }

// @mixin iphonex_constraints() {
//   @supports (padding: unquote("max(0px)")) {
//     @content;
//   }
// }

// @mixin hexagon_grid($color) {
//   background-image: url("data:image/svg+xml,%3Csvg width='56' height='68' viewBox='0 0 56 68' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cg clip-path='url(%23clip0)' stroke='#{$color}'%3E%3Cpath d='M-1 34L55 8.07502e-06'/%3E%3Cpath d='M-1 0L83 51'/%3E%3Cpath d='M-1 34L83 85'/%3E%3Cpath d='M83 17L-1.00005 68'/%3E%3Cpath d='M27 0L27 69'/%3E%3Cpath d='M55 0L55 69'/%3E%3Cpath d='M55 0L83 17'/%3E%3Cpath d='M27 85L83 51'/%3E%3C/g%3E%3Cdefs%3E%3CclipPath id='clip0'%3E%3Crect width='56' height='68' fill='white'/%3E%3C/clipPath%3E%3C/defs%3E%3C/svg%3E%0A");
//   background-position: center center;
//   background-repeat: repeat;
// }
